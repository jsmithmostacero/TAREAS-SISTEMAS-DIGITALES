DEFINE OSC 4

TRISA = %00111
TRISB = %00001100

DEFINE LCD_DREG PORTB
DEFINE LCD_DBIT 4

DEFINE LCD_RSREG PORTB
DEFINE LCD_RSBIT 0

DEFINE LCD_EREG PORTB
DEFINE LCD_EBIT 1

DEFINE LCD_BITS 4
DEFINE LCD_LINES 2

DEFINE LCD_COMMANDUS 2000
DEFINE LCD_DATAUS 50

'DECLARACION DE VARIABLES
N VAR BYTE[4]
A0 VAR BIT
A1 VAR BIT
A2 VAR BIT
A0_ANT VAR BIT
A1_ANT VAR BIT
A2_ANT VAR BIT
PARPA VAR BIT
POS_PARPA VAR BYTE
ITERA VAR BYTE
X VAR BYTE
EDITAR VAR BIT

'INICIALIZACION DE VARIABLES
POS_PARPA = 76
N[0]=53:N[1]=54:N[2]=55:N[3]=56

'COMANDO INICIALES
LCDOUT $FE,128+POS_PARPA
'76-77-78-79
LCDOUT N[0]
LCDOUT N[1]
LCDOUT N[2]
LCDOUT N[3]

INICIO:

'LECTURA DE ENTRADAS
    A0 = PORTA.0
    A1 = PORTA.1
    A2 = PORTA.2
    
'DECODIFICACION DE ENTRADAS       
'ACCION A REALIZAR

   IF A0=1 AND A0_ANT=0 THEN
      PARPA=~PARPA
   ENDIF
   
   IF A1=1 AND A1_ANT=0 THEN
    IF PARPA=1 THEN
      POS_PARPA = POS_PARPA+1
      X = X + 1
      IF POS_PARPA=80 THEN POS_PARPA=76
    ENDIF
   ENDIF
   
   IF A2=1 AND A2_ANT=0 THEN
      IF PARPA=1 THEN
        EDITAR=1
        gosub INCREMENTAR
        GOSUB CAMBIAR
      ENDIF
   ENDIF
   
   IF PARPA=1 THEN
      GOSUB PARPADEO 
   ENDIF   

' ACTUALIZACION DE SALIDA   
   IF EDITAR=1 THEN 
      LCDOUT $FE,128+POS_PARPA
      LCDOUT N[X]
   ENDIF
    
 'PUESTA EN ESTADO INICIAL DE LAS VARIABLES
   IF ITERA=200 THEN ITERA=0
   IF X=4 THEN X=0
   EDITAR=0
   A0_ANT = A0
   A1_ANT = A1
   A2_ANT = A2
 
 
'LAS PAUSAS SON INCORRECTAS    PAUSAS ACEPTABLES 1-10 MSEG
  PAUSE 1
  
GOTO INICIO

'PROCEDIMIENTOS
INCREMENTAR:
   if POS_PARPA = 76 then n[0]=n[0]+1
   if POS_PARPA = 77 then n[1]=n[1]+1
   if POS_PARPA = 78 then n[2]=n[2]+1
   if POS_PARPA = 79 then n[3]=n[3]+1
RETURN

CAMBIAR:
   J VAR BYTE
   FOR J=0 TO 3 STEP 1
      IF N[J]=58 THEN N[J]=48
   NEXT
RETURN

PARPADEO:
   ITERA = ITERA + 1
   IF ITERA = 100 THEN
      LCDOUT $FE,128+POS_PARPA
      LCDOUT $FE,$0E
   ENDIF
   IF ITERA = 200 THEN LCDOUT $FE,$0C
RETURN
